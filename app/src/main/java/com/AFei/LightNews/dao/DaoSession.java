package com.AFei.LightNews.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.AFei.LightNews.model.HistoryBean;
import com.AFei.LightNews.model.NewBean;
import com.AFei.LightNews.model.NewTypeBean;
import com.AFei.LightNews.model.RecentNewsBean;

import com.AFei.LightNews.dao.HistoryBeanDao;
import com.AFei.LightNews.dao.NewBeanDao;
import com.AFei.LightNews.dao.NewTypeBeanDao;
import com.AFei.LightNews.dao.RecentNewsBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig historyBeanDaoConfig;
    private final DaoConfig newBeanDaoConfig;
    private final DaoConfig newTypeBeanDaoConfig;
    private final DaoConfig recentNewsBeanDaoConfig;

    private final HistoryBeanDao historyBeanDao;
    private final NewBeanDao newBeanDao;
    private final NewTypeBeanDao newTypeBeanDao;
    private final RecentNewsBeanDao recentNewsBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        historyBeanDaoConfig = daoConfigMap.get(HistoryBeanDao.class).clone();
        historyBeanDaoConfig.initIdentityScope(type);

        newBeanDaoConfig = daoConfigMap.get(NewBeanDao.class).clone();
        newBeanDaoConfig.initIdentityScope(type);

        newTypeBeanDaoConfig = daoConfigMap.get(NewTypeBeanDao.class).clone();
        newTypeBeanDaoConfig.initIdentityScope(type);

        recentNewsBeanDaoConfig = daoConfigMap.get(RecentNewsBeanDao.class).clone();
        recentNewsBeanDaoConfig.initIdentityScope(type);

        historyBeanDao = new HistoryBeanDao(historyBeanDaoConfig, this);
        newBeanDao = new NewBeanDao(newBeanDaoConfig, this);
        newTypeBeanDao = new NewTypeBeanDao(newTypeBeanDaoConfig, this);
        recentNewsBeanDao = new RecentNewsBeanDao(recentNewsBeanDaoConfig, this);

        registerDao(HistoryBean.class, historyBeanDao);
        registerDao(NewBean.class, newBeanDao);
        registerDao(NewTypeBean.class, newTypeBeanDao);
        registerDao(RecentNewsBean.class, recentNewsBeanDao);
    }
    
    public void clear() {
        historyBeanDaoConfig.clearIdentityScope();
        newBeanDaoConfig.clearIdentityScope();
        newTypeBeanDaoConfig.clearIdentityScope();
        recentNewsBeanDaoConfig.clearIdentityScope();
    }

    public HistoryBeanDao getHistoryBeanDao() {
        return historyBeanDao;
    }

    public NewBeanDao getNewBeanDao() {
        return newBeanDao;
    }

    public NewTypeBeanDao getNewTypeBeanDao() {
        return newTypeBeanDao;
    }

    public RecentNewsBeanDao getRecentNewsBeanDao() {
        return recentNewsBeanDao;
    }

}
